services:
  # Aplicación Node.js
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: copypasteapp
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - PORT=3012
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    ports:
      - "3012:3012"
    depends_on:
      - redis
    networks:
      - internal
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3012/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Redis para almacenamiento temporal
  redis:
    image: redis:7-alpine
    container_name: copypasteapp-redis
    restart: unless-stopped
    command: redis-server --requirepass ${REDIS_PASSWORD} --maxmemory 256mb --maxmemory-policy allkeys-lru
    networks:
      - internal
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

networks:
  # Red interna para comunicación entre servicios
  internal:
    driver: bridge

volumes:
  # Volumen persistente para datos de Redis
  redis_data:
    driver: local